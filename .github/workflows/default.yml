name: default

on:
  push:
    branches:
      - '**'
      - '!master'
      - '!develop'
  pull_request:
    branches:
      - '**'
      - '!master'
      - '!develop'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Deploy Infinispan with caches
        run: sudo docker run -d -p 11222:11222 -e USER="user" -e PASS="pass" quay.io/infinispan/server-native:11.0 && curl -X POST localhost:11222/rest/v2/caches/posts && curl -X POST localhost:11222/rest/v2/caches/comments

      - name: Run tests
        run: ./gradlew test
        env:
          QUARKUS_INFINISPAN_CLIENT_SERVER_LIST: localhost:11222
          QUARKUS_INFINISPAN_CLIENT_AUTH_USERNAME: user
          QUARKUS_INFINISPAN_CLIENT_AUTH_PASSWORD: pass

      - name: Cleanup Gradle cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

      - name: Upload test artifacts
        uses: actions/upload-artifact@v2
        with:
          name: last-test-artifact
          path: |
            build
          retention-days: 1

  sonar:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch all
        run: git fetch

      - name: Download test artifacts
        uses: actions/download-artifact@v2
        with:
          name: last-test-artifact
          path: build

      - name: Install JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Send report to sonar
        run: ./gradlew sonarqube
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}

      - name: Cleanup Gradle cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Send report to sonar
        run: ./gradlew build -x test

      - name: Cleanup Gradle cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: last-build-artifact
          path: |
            build
          retention-days: 1

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: last-build-artifact
          path: build

      - name: Build Docker Image
        run: docker build -t mebr0/integrated-twitter .
